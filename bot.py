import requests
import json
import time
import pydbus
def sendCVE(*phones):
    current_time = time.time()
    earlier_time = current_time - 3600
    earlier_time_tuple = time.gmtime(earlier_time)
    current_time_tuple = time.gmtime(current_time)
    current_time_str = time.strftime("%Y-%m-%dT%H:%M:%S", current_time_tuple)
    earlier_time_str = time.strftime("%Y-%m-%dT%H:%M:%S", earlier_time_tuple)
    print("one hour earlier: " + earlier_time_str)
    print("current time: " + current_time_str)  
    base_url  = f"https://services.nvd.nist.gov/rest/json/cves/2.0/?pubStartDate={earlier_time_str}&pubEndDate={current_time_str}"
    print(base_url)
    base_url = requests.get(base_url)
    res_json = base_url.json()
    dump_json = json.dumps(res_json)
    data = json.loads(dump_json)
    bus = pydbus.SessionBus()
    bot = bus.get("org.asamk.Signal")
    for vuln in data['vulnerabilities']:
        if 'cvssMetricV31' in vuln['cve']['metrics']:
            base_severity = vuln['cve']['metrics']['cvssMetricV31'][0]['cvssData']['baseSeverity']
            cvss_metric = vuln['cve']['metrics']['cvssMetricV31'][0]['cvssData']['version']
            base_score = vuln['cve']['metrics']['cvssMetricV31'][0]['cvssData']['baseScore']
        elif 'cvssMetricV30' in vuln['cve']['metrics']:
            base_severity = vuln['cve']['metrics']['cvssMetricV30'][0]['cvssData']['baseSeverity']
            cvss_metric = vuln['cve']['metrics']['cvssMetricV30'][0]['cvssData']['version']
            base_score = vuln['cve']['metrics']['cvssMetricV30'][0]['cvssData']['baseScore']
        else:
            base_severity = None
            cvss_metric = None
            base_score = None
        if base_severity in ["CRITICAL", "HIGH"]:
            print(base_severity)
            cve_id = vuln['cve']['id']
            cve_description = vuln['cve']['descriptions'][0]['value']
            references = [reference['url'] for reference in vuln['cve']['references']]
            print("CVE ID:", cve_id)
            print("CVE Description:", cve_description)
            print("Metrics:")
            print("CVSS Metric :", cvss_metric)
            print("Base Severity:", base_severity)
            print("Base Score:", base_score)
            print("References:",references)
            ref_url = '\n\n'.join(references)
            alert_message = "CVE ID: " + str(cve_id) + "\n"+"Base Severity: "+ str(base_severity) + "\n" +"Base Score: " + str(base_score) + "\n"+"CVE Description: \n\n" +  str(cve_description)+ "\n\n" +  "References: " + "\n" + str(ref_url)
            for phone in phones:
                try:
                    bot.sendMessage(alert_message,None,phone)
                except Exception as e:
                        print(e)   
        else:
            print(f"No CVEs data found at this time {current_time_str}")
while True:
    # examples sendCVE("+966XXXXXXXXX","+966XXXXXXXXX")
    sendCVE()
    print("\n================================\nI will work after one hour\n================================")
    time.sleep(3600)
